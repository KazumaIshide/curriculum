<?php
//PHP研修プログラム
?>



<html>
    <p>I say that <?php echo "Hello World";?></p>
</html>

<?php
echo "1.開発環境・検証・本番環境"."<br>";
echo "開発環境
　機器やソフトウェア、システムを開発するために必要は機材やソフトウェアなどの組み合わせ。また、それらを組み合わせて構成された開発者の作業環境。<br>
　大規模はプロジェクトでは、複数の人間が共同で開発するためにソースコードのバージョン管理やプロジェクト管理といった機能が必要になる。それらソフトウェア開発に特化した機能を実装した開発環境のことを統合開発環境（IDE:Integtrated Development Environment）と呼ぶ。IDEは、EclipseやVisual Studioなどが有名。<br>

検証環境 <br>
　検証テストを「Quality Assurance」というため、「QA環境」ともいわれる。<br>
　開発し終わった、リリース予定の機能をテストするための環境。開発環境と検証環境を分けておくことで、テスト中のシステムの状況を変更することなく、平行して別の開発を進めることができる。ここで不具合が見つかると、再度バグ取りを行う。<br>

本番環境 <br>
　サービスの実運用を行う環境。最終的は動作確認、テストを十分行ったうえでこの環境にもっていく。"."<br>";
echo "<br><br>2.基本設計・詳細設計書"."<br>";
echo "基本設計書<br>
　ソフトウェアの動きを外から見たときにどういう動きをするのか（What）を決めたもの。
要件定義をした後、それに基づき動きを確認する。<br>
1.	業務フロー：業務の流れを理解し機能を洗い出す。<br>
2.	機能一覧表：開発範囲となる機能の一覧<br>
3.	ネットワーク構成図：ネットワークの構成<br>
4.	テーブル定義：データベースのテーブル定義<br>
5.	ER図：データベースのER図の作成<br>
6.	画面レイアウト：画面イメージ<br>
7.	帳票レイアウト：帳票イメージ<br>

詳細設計<br>
　基本設計で決められた動きをどうやって実現するか?（How）を決めたもの。
　クライアントを意識せず社内開発者が開発向けに作った設計書の場合が多い<br>
1.	機能設計書：<br>機能ごとに処理を記述する。<br>
フローチャートを記述する。<br>
画面の詳細項目の説明<br>
帳票項目の詳細説明<br>
2.	データベースの物理設計書"."<br>";
echo "<br>3.Ajax"."<br>";
echo "Ajax<br>
　Webページを表示した状態のまま、別のページや再読み込みなどを伴わずwebサーバー側と通信を行い、動的に表示内容を変更する手法。ページ上でプログラムを実行できる、JavaScriptの拡張機能を用いる。<br>
　従来のWebアクセス動作は、全てユーザーの操作のタイミングが引き金となり、操作と１対１で結果が出るものだった。一方、Ajaxの場合、ユーザーがアクセスするとまず、JSのプログラムをダウンロードさせる。この後、ユーザーの操作は直接Webさーばーに届くのではなく、JSを介して処理される。Webサーバーとのデータのやり取りや、画面表示はJSが行う。<br>
　例えば、スクロール地図の場合、JSは実際の表示領域より大きめの地図データをダウンロードしておく。そして、ユーザーがマウスで地図をスクロールすると、JSのプログラムがあらかじめダウンロードしておいたその方向の地図を表示して時間を稼ぐ。その間に、その先のデータを追加でダウンロードし、今度はそれを表示する、このように、JSはユーザーの操作とは独立して動作している。"."<br>";
?><img class="alignnone size-full wp-image-371"
src="http://54.238.147.46/wp-content/uploads/2020/04/update_task_status/png" alt="" width="716"
height="180" dara-pagespeed-url-hash="608921261"
onload="pagespeed.CriticalImages.checkImageForCriticality(this);"
