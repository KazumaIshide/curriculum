ITとは？
IT
　Information Technology、情報技術の略。コンピュータとネットワークを利用した技術のこと。厳密には、コンピュータをベースとした情報システム、特にアプリケーションソフトウェアやコンピュータのハードウェアなどの研究、デザイン、開発、インプリメンテーション、サポートマネジメント。
主に、ハード、ソフト、通信技術の3つの要素


OS
OS
　Operating System の略。アプリ、デバイスを動作させるための基本となるソフトウェア。キーボードやマウスなどのデバイスから入力した情報をアプリケーションに伝え、ソフトウェアとハードウェアの連携をつかさどる中枢的な役割。
OSはHDDやSDDなどのストレージに、スマホなどでは内臓フラッシュメモリのROMにインストールされている。通常、ドライバと呼ばれるソフトを介して、動作する。アプリケーションは応用ソフトウェア、OSが基本ソフトウェアといわれる。

Windows
　マイクロソフト社のOS（since 1985）。Windows95から、XP、Vistaなどと続く。大衆向けには、Windows10が最新。一方、サーバー分野のWIndowsServerエディションが存在する。

Mac OS
　Apple社のOS。グラフィカルで、とても使いやすい。2001年のMac OS　Xからは根幹にBSDを基とした、Apple開発のUniｘ系OSとなっていて、現在は商用Unixとして一定の成功を収めている。

Linux
　無料（オープンソースOS）で、誰でも自由に改良できる。スパコンやロボットなどに多く利用。サーバーで使われているOSの中で最もユーザーが多い。

Unix
　ベル研究所の発表し、かなり歴史は長い。シェアは少ないが、企業の中でのサーバー・ワークステーション上で引き続き稼働している。The Open Groupが保有し、同団体の策定した共通仕様「Single UNIX Specification」を満たしていると承認されたOSのこと。UNIX風のOSも多く、「UNIX系OS」という。Linuxが代表的。


言語・環境
HTML
　Hyper Text Markup Language で、Webページを作るための基本的なマークアップ言語。WebページはHTMLタグを使った文書であり、これがブラウザに取り込まれることで、Webページが表示される。

CSS
　Cascading Style Sheetの略。ウェブページのスタイルを指定する。HTMLやXHTMLなどで作成されたWebページにスタイルを適用する場合は、スタイルシート言語の一部であるCSSが一般的に利用される。
→CSSはHTMLと組み合われて用いる。
HTML：Webページ内の各要素の意味、情報構造を定義する
CSS：それらをどのように装飾するかを指定する。色、サイズ、レイアウトなどの表示スタイル、印刷スタイル、音声などの再生スタイルなど。
　HTMLだけでも、Webページ見栄えを制御することはできる。しかし、閲覧環境ごとに意図しないレイアウトになること。情報構造の定義のためのHTMLを見栄えという本来とは違う使い方をすると、文書の情報構造がでたらめになるため。

MySQL
　データベース管理システム。大容量のデータに対して高速に動作し、実用性が高い。オープンソースのため、非商用なら無償で使用できる。
　データベースとは、「複数で情報を共有すること」と「検索、加工すること」を目的に整理されたデータの集まり。サーバーを構築する際、「LAMP環境」という「Linux」＋「Apache」＋「MySQL」「PHP」の組み合わせが採用される場合が多い。
　GoogleやYouTubeなどでも採用されている、MySQLを用いることで、ユーザーからアクセスが多い大規模なアプリケーションに対応できる。

PHP
　HTMLに組み込めるWeｂ開発に用いられるスクリプト言語。
JavaScript：クライアント（閲覧しているブラウザ）がコードを受け取りそこで動作する。コードを見れる。
PHP:サーバーサイドでコードを実行する。クライアントは結果のみ閲覧できる。

1.	HTMLソースコードを生成
2.	データベースと連携
→MySQLやPostgrSQLなどのデータベースと連携し、Webサイトを簡単に作成できる。ブログなどは、サイトへのアクセスがあると、PHPで記事のデータをサーバーから読み込んで表示させる。
3.	クライアントから送信された情報の受け取り。
→HTMLのフォームでユーザーが記入した情報をPHPにより受け取れる。

JavaScript
　プログラミング言語。ユーザー側のWebブラウザと、Webさいとまたは、Webサービスの相互間のやり取りを円滑にするために使われている。ウェブサイトでの操作による表示の変更や、サーバーとデータ通信し、データを取得する。メッセージボックス表示やカレンダー、地図など動的コンテンツをWeb上に表示できる。

1.	HTMLコンテンツの変更
2.	HTMLコードの変更
3.	CSSスタイルの変更
4.	HTMLコンテンツを表示・非表示にする

jQuery
 javaScriptでできることを、より簡単な記法で実現できるよう設計したjavascriptライブラリ。

1.	ブラウザの違いを意識せずに済む
→JSではブラウザで微妙に対応可能なメゾット、記法が異なる。jQuery自動的に吸収してくれる。
2.	HTMLのDOM操作が簡単にできる
→テキストボックスの中身の取得、変更。CSSをユーザ操作に合わせて変更などの層差が簡単に実現可能。
3.	Ajax処理が簡単に記述できる
→非同期で動作するJS。非同期通信、つまり画面表示中のHTMLページとは無関係に裏から他のJSだけでサーバーと通信できる。クライアントと通信中でも、ユーザーは操作できる。
　これにより、
・HTMLからのsubmit処理によるサーバー通信（同期処理方式）
・AjaxによりJSからサーバーに通信する方法（非同期処理通信）
の2通りが選択できるようになる。

Apache
 Webサイトを提供するためのソフトウェア。現在のWebさいとの全てが、Webサーバーソフトウェアといわれるツールによって提供されている。そのWebサーバーソフトウェアで世界中で利用されているのが「Anache」。
Webサーバー：データを保管している
・閲覧者のリクエストに応じて、サーバーのデータを表示
・CSMの場合データベースサーバーとの間に入りリクエストに応答する。
・必要に応じて、Webサーバー内の保管データを保護、アクセス制限する。
・別の専用サーバーとの連携
・閲覧者の間違ったリクエストに対し、リクエストのやり直しを促す

HTTP
　上記、Webサイトの閲覧者がWebサーバーにリクエストするときに使用する提示方法を。HTTPプロトコルと呼ぶ。（Hypertext Transfer Protocol）

1.	無料で利用できる
2.	コミュニティが充実している
3.	OS依存しない柔軟な
が特徴

Bootstrap
 HTML/CSS/Java Scriptから構成される最も有名なWebフレームワーク。Webページでよく使われるフォーム、ボタン、メニューなどの部品がテンプレートとして用意されている。デザイン性も確保。されに、それらのテンプレートが閲覧の際、表示が最適化されるようにjQueryで制御されている。
　どのような人も簡単に扱え、携帯端末にも対応。
フレームワーク：頻繁に必要とされる基礎的な機能をまとめて提供するもの。高度な知識・技術がなくてもOK的な。フレームワークは、枠組みであり、作業効率Up。


エンジニアなど
SE
　システムエンジニア。クライアントからの要求から、仕様を定め、大まかな設計をするまでのシステム開発における上流過程を担当する。
1.	要求分析・要件定義
顧客からのヒアリングで、開発期間や費用などを算出したうえで、顧客の要求をどのように実現するかを考える
2.	　基本設計
顧客のニーズを実現するシステムの設計を行う工程。
3.	　詳細設計
4.	テスト
SEはシステムの設計。プログラマはその設計を基にプログラミングを行うことが主な仕事

PG（プログラマ）
　コンピュータシステムのプログラムを作る仕事。プログラム過程における製造工程を担当。同じ動作のプログラムでも書き方により動作速度、バグが異なる。そのため、高い技術力が求められる。

Webデザイナー
　クライアントからの依頼されたWebサイトのデザインを担当する。
1.	Webサイトの構成とレイアウト
2.	Webサイトのデザイン
3.	Webサイトのコーディング
デザイン能力、コミュニケーション能力、プログラミングスキルが求められる。

ユーザーインターフェース（UI）
そもそもインターフェースとは
　何か2つのものの間の情報などのやり取りを行う時の方法や方式、手順ややり方のこと。窓口のようなイメージ。機械と人、機械と機械など。
具体例
　ハードインターフェース：USB、HDMI端子、家庭用コンセント
　ソフトインターフェース：APIファイル形式など。

ユーザーインターフェース
　人とコンピュータとの接点。コンピュータを使うときに利用者が情報を受け取ったり入力したりするための仕組み。CUIはキーボード入力のみでコンピュータを操作するUIの仕組み。GUIはディスプレイ上のカーソルをマウスで動かす操作。

CUI（Character User Interface）
　すべての操作をキーボードのみで行う画面。Winのコマンドプロンプトなど（マウスを使わない）。

GUI（Graphical User Interface）
　表示されているボタン、アイコンをマウスでクリックするとプログラムが作動する。グラフィックベースの操作体系ということ。直感的な操作ができる。

⇒要は、マウスが必要か（GUI）必要じゃないか（CUI）の違い。


ファイルとディレクトリ
ファイル
　利用者が、記憶媒体にデータを保存、読み込み、移動、削除などをする際、一つのまとまりとして取り扱うデータ集合のこと。OSの一部のファイルシステムによって管理される。
　ファイルにはそれぞれ固有のファイル名があり、拡張子で区別される。操作画面上では、記憶媒体内での位置（パス）やファイル名で表示される。

バイナリファイル：特に制限なくあらゆるビットバターンを記録できる自由な形式。
テキストファイル：データを文字情報をして記録したファイル。文字コード規格で記録されたコードに従いデータを文字列に置き換えて記録する。

ファイルは作成日時、アクセス権限などの情報と共に記録・設定される。

ディレクトリ
　フォルダのこと。ストレージのファイルシステムなどで、複数のファイルを格納し、ファイルを分類・整理することができる保管場所のことをディレクトリということがある。ストレージ内では、論理的に区切って名前を付けて区別する。

ルート・ディレクトリ
　ディスクを開いて一番最初にフォルダがある場所、階層構造の一番上にある場所のこと。階層を系統樹に例えると、その根底（ルート）となる部分すなわち、あらゆるファイルを核のしている大本となるハードディスクやフロッピーディスクがこれに該当する。
カレント・ディレクトリ
　ディレクトリの階層構造（ディレクトリツリー）の中で、実行中のソフトウェアなどがストレージ（外部記憶装置）のファイルシステム中で現在位置として指示しているディレクトリのこと。Windows系ではコマンドプロンプトでｃｄと入力すると出てくる。相対パスでファイルやディレクトリを指定する際の基準の位置となる。

パス
　コンピュータ内で特定の資源の所在を表す文字列のこと。パスは、階層構造の最上位から順にディレクトリ名を並べたもの。

相対パス
　ファイルの所在などを書き表すパスの表記法の一つ。現在位置からの相対的な位置関係を記述する方式。起点から、目的の位置までの道筋にある要素を順に並べて記述する。（基準点がカレント・ディレクトリ）
　カレント・ディレクトリは省略可能だが、明示する場合は「.」で表し、一階層上のディレクトリは「..」で表す。

絶対パス
　ファイルの所在を書き表すパス（path）の表記法の一つで、階層構造の頂点（最上位階層）からの位置関係を記述する。現在位置とは無関係。


各種プロトコル
HTTP（HyperText Transfer Protocol）
　Webサーバーとwebクライアントの間で、データの送受信を行うために用いられるプロトコル（通信規約）。Webページを構成するHTMLファイルやページに関連つけられたスタイルシート、スクリプト、画像などのファイルを、データ形式などのメタ情報を含めてやり取りできる。
　通信は、クライアントがHTTPリクエスト（要求）を送り、HTTPレスポンスを返すプル型の通信。

FTP(File Transfer Protocol)
　インターネットなどのTDP/IPネットワークでファイル転送を行うことのできるプロトコル（通信規約）の一つ。
　HTTPはWebページのコンテンツをサーバーから読み出すために使われる。Webブラウザは、Webサーバー上のHTMLファイルや画像ファイルなどをダウンロードし、パソコンのハードディスクやメモリーに一時的にためたものを表示する。一方FTPは、特定ホスト間でファイルを転送する目的で作られたプロトコル。そのため、FTP通信の最初にユーザーIDとパスワードによって通信相手をかくにんする認証プロセスがある。つまり、認証を必要とするかしないかの違い。
　ただし、ユーザーIDやパスワードを要求しないAnonymousFTPという仕組みがある。これは、ユーザー名を「Anonymous(匿名)」パスワードをユーザーのメールアドレスにしてFTPサーバーにログインする。

HTTPS（Hypertext Transfer Protocol Secure）
　HTTPがSSLやTLSで暗号化されている状態を表したもの。これにより、通信が暗号化されているかを見分ける。また、暗号化にあｈデジタル証明書が用いられるため、証明書の発行元や、登録されたWebサーバー運営の身元情報などを知ることができる。

　郵便物に例えると、HTTPがはがき、HTTPSが優書のようなもの。
 


SSL（Secure Sockets Layer）
 インターネットなどのIPネットワークでデータを暗号化して送受信するプロトコル（通信手段）の一つ。データを送受信する一対の機器間で通信を暗号化し、盗み見や改竄を防ぐ。
1.	意図した接続先か
2.	通信内容の暗号化
の2つの役割。
　公開鍵暗号を応用した、デジタル証明書による通信相手の認証と、共通鍵暗号による通信の暗号化、ハッシュ関数による改竄権利などの機能。
　次世代の企画がTLSであり、今はTLSが主流。合わせてTLS/SSLと記載されることが多い。
 

SSH(Secure SHell)
 UNIXコンピュータで利用されるネットワークを介して、別のコンピュータにログインしたり、ネットワークに接続された機器を遠隔操作し、管理する手段。SSHは安全性を高める効果がある。ネットワーク上のデータを暗号化することで、インターネット経由でも安全である。
パスワード認証方式と公開鍵認証方式がある。

SSLとSSHの違い
大雑把に言うと、
SSL：インターネット用、ユーザー認証はオプション扱い
SSH：遠隔操作用、ユーザー認証が必須
 

ポート/ポート番号
　インターネットで情報のやり取りを行うために、使用される番号のこと。ポート番号またはサービス番号とも呼ばれる。IPアドレスとともに指定される補助用のアドレスで、通常、プロトコルに応じて割り当てられる。
　パソコンと周辺機器を接続するための末端部分のこともさす。

HTTP、FTP、SSHの各ポート番号
HTTP：80
FTP：21
SSH：22

ファイアウォール（防火壁）
　ネットワークの境界に設置され内外の通信を中継・監視し、外部の攻撃から内部を保護するためのソフトウェアや機器、システムのこと。内部ネットワークと外部ネットワークの間に入り、不正な通信は遮断する。
TCP（Transmission Control Protocol）
　インターネットなどのネットワークでIPの一段階上位層のプロトコル（通信規約）。この二つを省略し、TCP/IPということもある。コネクションと通信の制御機能がある。
コネクションの過程では、メッセージのやり取りが1往復半あるから3ウェイハンドシェークという。


IPアドレス
IPアドレス
　インターネットなどのTCP/IPネットワークに接続されたコンピュータや通信機器の一台ごとに割り当てられた識別番号。現在、一つのネットワークに最大42億台が参加できる

IP：インターネットなどのネットワークでは、機器間の通信をIPと呼ばれる共通のプロトコルによって行う。

　127.0.0.1のように０から２５５までの数字を4つ組み合わせたもの。主に使用されているこれらの、4つの数字の組み合わせによるアドレス体系をIPｖ４と呼ばれる。今後、さらに多くのIPアドレスが消費されるのに備え、IPｖ６の体系への移行も検討されている。


グローバルIPアドレス
　インターネットなどの公共回線でアクセスを行うときに使用するIPアドレス。インターネットを管理する組織やプロバイダによりIPアドレスが管理されていて、自由に割り振りはできない。グローバルIPアドレスは同時に世界中で重複しない。

プライベートIPアドレス
　家庭内や施設内でのネットワーク機器で使用する。家庭や企業で自由に割り振りできる。同じLANでは同じIPアドレスは割り振りできないが、違うLANであれば同じIPアドレスが使用できる。プライベートIPアドレスのままでは、インターネットを利用できない。通常、ルーター等で「プライベートIPアドレス」→「グローバルIPアドレス」に変換され利用している。

IPネットワーク
　コンピュータネットワークの一つで、インターネットプロトコル（IPというプロトコルによってデータの送受信を行うもの。最も大規模で有名なIPネットワークが「インターネット」である。
　IPは複数のネットワークを相互に結んで横断的に通信できるようにするために考案されたプロトコル規格。IPによって様々な組織や個人が運用するネットワークを全世界規模で相互接続した、開かれた通信網がインターネットである。
　IPは、組織内で完結したネットワークとして構築、運用することもでき、企業などの単一の組織内で設置されたものをインドラネットということがある。
 


ドメイン
ドメイン
　インターネット上で接続しているネットワークに設定される名前のこと。ドメイン名を指す。機器同士はIPアドレスでお互いを認識しているが、数字の羅列は人間にとって扱いにくい為、別名としてドメインを運用するようになった。ドメインとIPアドレスを対応させるシステムはDNS（Domein Name System）と呼ばれ、全世界のDNSサーバが連携して運用されている。一つのドメインに複数のIPアドレスを対応させたり、一つのIPアドレスに複数のドメインを対応させることができる。

　ドメインは.（ドット）で区切る。一番右が最上位階層のトップレベルドメイン（TLD）。以下セカンドレベル…と続く。トップレベルドメインは国、地域ごとに割り当てられる「ccTLD」と商用を表す「.com」のように世界中から登録を受け付ける「gTLD」がある。国際機関向けには。「.int」である。

DNS（Domain Name System）
 IPネットワーク上で、ドメイン名とIPアドレスの対応関係を管理するシステム。ホスト名とIPアドレスの対応関係や管理情報などを記録し、一定の通信手段に基づきどこからでも容易に参照できるようにした世界規模の分散型データベースがDNS。
 
１～６の過程を繰り返して最終的に７のIPアドレスを教えてもらう（反復問い合わせ）。すべてのリゾルバーが反復問い合わせを行うとネットワークが混みあう。各リゾルバーは「フルサービスリゾルバー」という代理で調べてくれるDNSサーバーに反復問い合わせを任せる。

VPN（Virtual Private Network）
 インターネットなどに接続している利用者間に仮想的なトンネルを構築し、プライベートなネットワークを拡張する技術。公衆回線を利用した、仮想的な組織内ネットワーク。企業内のネットワーク拠点間接続などにつかわれ、あたかも、自社ネットワーク内部のように遠隔地の拠点と通信できる。データを送り出す際に暗号化し、受信側でデータを復号化する。
 
LAN間で構築するLAN間アクセスVPNと、外出先から自社LANに接続するリモートアクセスVPNがある。

ブリッジ
　ネットワークで、複数のネットワークセグメントを結ぶ中継機器のうち、受信したデータのMACアドレスなどデータリング層の宛先情報を参照して中継の可否を判断する機能を持ったものをネットワークブリッジあるいは単にブリッジという。
　無駄な信号が流れるのを防いで性能を向上させることができる。

プロキシサーバー
プロキシ：企業などの内部ネットワークとインターネットの境界にあり、内部のコンピュータの代理（proxy）としてインターネット上のコンピュータへ接続を行うコンピュータのこと。
プロキシの機能を持つサーバーをプロキシサーバーという。

プロキシサーバーは内部のコンピュータから外部へのアクセス要求を受信すると自らが接続元となって要求を行い、応答が返ってくると内部のコンピュータへ取り次ぐ。
 
　プロキシはアプリケーション層で動作するため、メール用、Web用などプロトコルやアプリケーションごとに容易する必要がある。通常は、Web閲覧のためのHTTP通信を中継するHTTPプロキシのことを指す。

　プロキシは一度取得した外部のサーバーのデータを水笠のストレージ（外部記憶装置）内に保存しておくキャッシュ機能があり、再び同じデータに取得要求があったとき、自らが保管しているデータを代理で渡す場合がある。これにより、外部サーバーの負担軽減、内部回線の混雑緩和ができる。また、内部からの中継を拒否するフィルタリングを行ったり、外部からのウイルスを検知するファイアウォールの役割も果たす。


電子メール
SMTP（Simple Mail Transfer Protocol）
　インターネットなどのTCP/IPネットワークで標準的に用いられる電子メールを伝送するためのプロトコル（通信手順）の一つ。
　WindowsやMacOSのコンピュータ、携帯電話などの異なる機種間で、電子メールが使えるのは、SMTPプロトコルに準拠しているため。

POP（Post Office Protocol）
　ユーザー側に実装されている、メールソフトがメールサーバーから自身のメールを取り出す処理において、使用するメール受信用プロトコル。現在は、POPのバージョン３であるPOP3が用いられる。
  
IMAP
　インターネットなどのTCP/IPネットワークで標準的に用いられる、電子メールを受信するための通信規約。POPではサーバーにアクセスするたびに届いているメールをすべて手元にダウンロードし、メールソフト側でメールの保管や分類などの管理を行う。IMAPは、メールサーバー上にメールアドレスごとに設けられた専用の保存領域で管理する。


セッションとクッキー
セッション
　友進の開始から終了までを指す。クライアントとサーバーで行う通信の場合、クライアントからサーバーへ接続した時点でセッションが始まり、サーバーから切断するとセッションが終了する。この一連の流れを管理することをセッション管理という。
　セッション管理には、セッションを識別するためのセッションIDを生成し、その内容をCookieに保存。このセッションIDにユーザー情報や処理状況を紐づけし、通信時にCookieに保存したセッションIDを読み取ることで、その通信がどのユーザーからのもので、どういった通信状態かが把握可能。

クッキー
　Webサイト（Webサーバー）の提供者がWebブラウザを通じて訪問者のコンピュータに一時的にデータを書き込んで保存させる仕組み。
　一度Cookieに保存されると次にアクセスしたときに自動的に利用者の識別が行われて前回の続きのようなサービスを受けられる。1第のサーバーが同じコンピュータに対して発行できるCookieの数は20個に制限されている。Cookieの総数は300個までで、これを超えると古い方から削除される。

キャッシュ
　データを一時的にメモリやディスク上の領域に格納して、次回のwebサイトへのアクセスの際にサーバーにアクセスすることなく表示できる複製されたデータのこと（メモリに複製されたデータがストレージのキャッシュ）。サーバーへのアクセスを軽減し、表示の高速化が可能となる。
　コンピュータのメインメモリはストレージ（外部記憶装置）に比べ何桁も高速にデータの読み書きが行えるため、使用頻度の高いデータをストレージに置いた場合よりも高速に処理できる。同様の手法は通信でも利用される。
通信ネットワークを介して外部から受信したデータをストレージに保存しておくことで次に必要な時に高速に読み出すことができる。
 

DB(データベース)について
チューニング
　情報システムやコンピュータ、ソフトウェアなどの設定、構成を調整し、目標の状態に近づけたり、性能を最大限引き出すこと。
　ハード・ソフトウェアの更新、各種システムを設定変更、ソフトウェアの構造変更など。

スロークエリ
　データベースにおいて、時間のかかっているSQLのこと。だいたい、2秒以上は遅い部類。

クエリ(Query)：ソフトウェアに対するデータの問い合わせや要求などを一定の形式で文字に表したもの。
　データベース管理システムでは、利用者や外部システムからデータベースに対する処理要求（問い合わせ）を文字列としてあらわしたものをクエリという。データベースとして広く普及しているリレーショナルデータベース（RDB/RDBMS）ではクエリを記述する言語の標準として、「SQL」（Structured Query Language）が定めており、単にクエリといえば通常はSQLを指す
 

インデックス
　データベースやファイルシステム、検索エンジンなどでは、収集・格納された大量のデータを素早く検索・抽出するために作成された索引データのこと。検索エンジンのデータベースにウェブページのデータが管理されることを「インデックス化」という。


テストについて
フロー
　コンピュータプログラムを構成する命令や手続き、処理の流れなどのこと。通信のぶんやでは　回線を通じて伝送される信号やデータの流れを「データフロー」あるいは単にフローという。

単体テスト（UT）
　単一の部品（モジュール）を対象に行うテスト。多くの場合、クラス、メソット、関数など言語仕様上他のプログラムから1つのまとまりとして扱われる最小の単位ごとに行われる。

結合テスト（CT）
　複数のモジュール（部品）を組み合わせて行うテスト。単体テストの後に行う。
　主に、モジュール間の接続点（インターフェース９がうまく機能するかを確認する場合と、結合状態で外部から見て一体として正しく機能するかを確認する場合がある。
　結合テストが終了すると、本番同様の環境を構築して、ハードウェアや回線を含めたシステム全体として適切に機能するかを検証する「システムテスト」が行われることが多い。


バージョン管理
Git
　オープンソースの文さんバージョン管理システムの一つ。複数の開発者が共同で一つのソフトウェアを開発する際にソースコードやドキュメントなどの編集履歴を統一的に管理するのに用いられる。
　プロジェクトの寺家列を分岐（ブランチ）して派生プロジェクトを作成したり、それを再び元の系列に融合（マージ）することができる。Gitは管理するデータの集合体であるリポジトリを書く利用者の手元のコンピュータに丸ごと複製し、必要に応じて中央の管理サーバーに同期する方式をとっている。Gitの中央リポジトリを作成・運用できるインターネット上のサービスがGitHubやGitLabである。
 
Source Tree
 CUI(コマンドプロンプト)型ではなく、GUI形式でGitを使えるツール。無料でOSに依存しない為、作業を可視化できる。

SVN（Subversion）
　オープンソースのバージョン管理システムの一つ。Gitなどはローカル環境にリポジトリの複製をつくる分散型バージョン管理システムであるのに対し、Subversionは集中型である。
　
 

コンフリクト
　競合、衝突。複数の装置やプログラムなどが同じ資源環境を同時に利用しようとして競合状態になってしまうこと。データベースシステムやファイルシステム、バージョン管理システムなどでは、同じ対象や領域に同時に複数の更新要求が発生し、内容が損なわれたり、要求が拒絶されるなど正常に処理できない状態のこと。

デグレ(Degrade)
　新しいバージョンのソフトウェアの品質が、以前より悪くなること。また、以前修正した不具合やバグが再発・復活すること。主な原因として、新たに開発した部分のテストやデバッグが不十分であったり、ソースコードのバージョン管理に失敗してバグの残っている古いコードを使ってしまったり、ある部分に程小路田秋声が別の部分に及ぼす影響の評価が不十分であることなどが上げられる。

マージツール
　高度な2者間、3者間のファイル比較、マージ、お延びフォルダの同期を行うツール。主な機能は、ファイルに含まれるテキストデータを比較して、差分の抽出と統合を実行すること、
　Arixis Mergeでは、差分を一文字単位で可視化することができる。大規模プロジェクトの開発現場を中心に活用される。
